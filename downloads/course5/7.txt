–£—Ä–æ–∫ 8‚Äì9 ‚Äì Task Manager: drag-and-drop —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —ñ–∑ dnd-kit —Ç–∞ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –∑–∞–¥–∞—á –º—ñ–∂ —Å–ø–∏—Å–∫–∞–º–∏
–£ —Ü—å–æ–º—É —É—Ä–æ—Ü—ñ —Å—Ç—É–¥–µ–Ω—Ç–∏ —Å—Ç–≤–æ—Ä—è—Ç—å Task Manager —ñ–∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é drag-and-drop –¥–ª—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –∑–∞–¥–∞—á –º—ñ–∂ —Ä—ñ–∑–Ω–∏–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, To Do, In Progress, Done). –î–ª—è —Ü—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Å—É—á–∞—Å–Ω–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ dnd-kit, —è–∫–∞ –Ω–∞–¥–∞—î –ø—Ä–æ—Å—Ç–∏–π API –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≥–Ω—É—á–∫–∏—Ö —Å–∏—Å—Ç–µ–º –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è.

–û—Å–Ω–æ–≤–Ω—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ:
–†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è drag-and-drop —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é dnd-kit.
–ü–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –∑–∞–¥–∞—á –º—ñ–∂ —Å–ø–∏—Å–∫–∞–º–∏.
–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ç–∞–Ω–æ–º —á–µ—Ä–µ–∑ Zustand –∞–±–æ –ª–æ–∫–∞–ª—å–Ω–∏–π state.
–î–∏–Ω–∞–º—ñ—á–Ω–∞ –≤—ñ–∑—É–∞–ª—å–Ω–∞ –≤–∑–∞—î–º–æ–¥—ñ—è –±–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω—å–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.
–ü—Ä–∏–∫–ª–∞–¥:
import React from 'react';
import { DndContext, closestCenter } from '@dnd-kit/core';
import { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';
import { CSS } from '@dnd-kit/utilities';
import { create } from 'zustand';

const useTaskStore = create((set) => ({
  columns: {
    todo: ['–ü—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏ –∑–≤—ñ—Ç', '–ó—Ä–æ–±–∏—Ç–∏ —Ä–µ–≤ º—é –∫–æ–¥—É'],
    progress: ['–°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞–∫–µ—Ç UI'],
    done: ['–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ ESLint']
  },
  moveTask: (from, to, task) => set((state) => {
    const newFrom = state.columns[from].filter((t) => t !== task);
    const newTo = [...state.columns[to], task];
    return { columns: { ...state.columns, [from]: newFrom, [to]: newTo } };
  })
}));

function SortableItem({ id }) {
  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id });
  const style = { transform: CSS.Transform.toString(transform), transition };
  return 
{id}
;
}

function Column({ id, tasks }) {
  return (
    

      
{id.toUpperCase()}

      
        {tasks.map((task) => ())}
      
    

  );
}

export default function TaskManager() {
  const { columns, moveTask } = useTaskStore();

  const handleDragEnd = (event) => {
    const { active, over } = event;
    if (!over) return;
    const from = Object.keys(columns).find((key) => columns[key].includes(active.id));
    const to = over.id;
    if (from && to && from !== to) moveTask(from, to, active.id);
  };

  return (
    

      
üß© Task Manager

      
        

          {Object.entries(columns).map(([key, tasks]) => (
            

              
            

          ))}
        

      
    

  );
}
‚úÖ –ú–µ—Ç–∞: —Å—Ç—É–¥–µ–Ω—Ç–∏ –ø–æ–≤–∏–Ω–Ω—ñ –Ω–∞–≤—á–∏—Ç–∏—Å—è:

–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É dnd-kit –¥–ª—è drag-and-drop —É React.
–†–æ–∑—É–º—ñ—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∏ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º—ñ–∂ —Å–ø–∏—Å–∫–∞–º–∏.
–Ü–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏ drag-and-drop —ñ–∑ –≥–ª–æ–±–∞–ª—å–Ω–∏–º —Å—Ç–∞–Ω–æ–º (Zustand).
–°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ –∑ –≤—ñ–∑—É–∞–ª—å–Ω–∏–º —Ñ—ñ–¥–±–µ–∫–æ–º.